import { createAsyncThunk, createSlice, current } from '@reduxjs/toolkit'
import type { RootState } from '../../../state/store'
import { getPlayersById } from '../../../apis/playerApiAxios'

// First, create the thunk
export const fetchPlayerById = createAsyncThunk(
    'players/fetchPlayerBy',
    async (userId: string, thunkAPI) => {
      const response = await getPlayersById(userId)
      return response;
    }
  )

const slice = createSlice({
  name: 'player',
  initialState: {} as Player,
  reducers: { 
  },
  extraReducers: (builder) => {
    // Add reducers for additional action types here, and handle loading state as needed
    builder.addCase(getPlayersById.fulfilled, (state, action) => {
      // Add user to the state array
      console.log(current(state));
      return action.payload.response[0];
    })
  },
})

export default slice.reducer

export const selectCurrentUser = (state: RootState) => state.players

// Generated by https://quicktype.io

export interface Player {
  id:          number;
  firstname:   string;
  lastname:    string;
  birth:       Birth;
  nba:         Nba;
  height:      Height;
  weight:      Weight;
  college:     null;
  affiliation: string;
  leagues:     Leagues;
}

export interface Birth {
  date:    Date;
  country: string;
}

export interface Height {
  feets:  null;
  inches: null;
  meters: null;
}

export interface Leagues {
  standard: Standard;
}

export interface Standard {
  jersey: number;
  active: boolean;
  pos:    null;
}

export interface Nba {
  start: number;
  pro:   number;
}

export interface Weight {
  pounds:    null;
  kilograms: null;
}