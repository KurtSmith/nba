import { createSlice, current } from '@reduxjs/toolkit'
import { getGames } from '../../../apis/gamesApiAxios';
import { Player } from '../../players/reducers/playerSlice';
import { Statistics } from '../../statistics/reducers/statisticsSlice';

const initialState : GamesWithStatus = {
  games: [],
 isLoading:true
};

const slice = createSlice({
  name: 'games',
  initialState:initialState,
  reducers: { 
  },
  extraReducers: (builder) => {
    // Add reducers for additional action types here, and handle loading state as needed
    builder.addCase(getGames.fulfilled, (state, action) => {
      // Add user to the state array
      console.log(action.payload);
      return action.payload;
    }),
    builder.addCase(getGames.pending, (state, action) => {
     state.isLoading = true;
      console.log("Pending");
    })
  },
})

export default slice.reducer
export interface GamesWithStatus
{
  games:GameWithPlayers[],
  isLoading:boolean
}
// Generated by https://quicktype.io

export interface Game {
  id:          number;
  league:      string;
  season:      number;
  date:        DateClass;
  stage:       number;
  status:      Status;
  periods:     Periods;
  arena:       Arena;
  teams:       Teams;
  scores:      Scores;
  officials:   string[];
  timesTied:   number;
  leadChanges: number;
  nugget:      null;
}
export interface GameWithPlayers extends Game {
  players:Player[];
  statistics:Statistics[];
}

export interface Arena {
  name:    string;
  city:    string;
  state:   string;
  country: string;
}

export interface DateClass {
  start:    Date;
  end:      Date;
  duration: string;
}

export interface Periods {
  current:     number;
  total:       number;
  endOfPeriod: boolean;
}

export interface Scores {
  visitors: ScoresHome;
  home:     ScoresHome;
}

export interface ScoresHome {
  win:       number;
  loss:      number;
  series:    Series;
  linescore: string[];
  points:    number;
}

export interface Series {
  win:  number;
  loss: number;
}

export interface Status {
  clock:    null;
  halftime: boolean;
  short:    number;
  long:     string;
}

export interface Teams {
  visitors: TeamsHome;
  home:     TeamsHome;
}

export interface TeamsHome {
  id:       number;
  name:     string;
  nickname: string;
  code:     string;
  logo:     string;
}
